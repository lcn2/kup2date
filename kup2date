#!/bin/bash -
#
# kup2date - determine if the kernel is up to date
#
# Copyright (c) 2016 by Landon Curt Noll.  All Rights Reserved.
#
# Permission to use, copy, modify, and distribute this software and
# its documentation for any purpose and without fee is hereby granted,
# provided that the above copyright, this permission notice and text
# this comment, and the disclaimer below appear in all of the following:
#
#       supporting documentation
#       source copies
#       source works derived from this source
#       binaries derived from this source or from derived source
#
# LANDON CURT NOLL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
# INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO
# EVENT SHALL LANDON CURT NOLL BE LIABLE FOR ANY SPECIAL, INDIRECT OR
# CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
# USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.
#
# chongo (Landon Curt Noll, http://www.isthe.com/chongo/index.html) /\oo/\
#
# Share and enjoy! :-)

# parse args
#
export VERBOSE=
export USAGE="usage: $0 [-v] [-h]"
while getopts vh flag; do
    case "$flag" in
    v) VERBOSE=true; ;;
    *) echo $USAGE 1>&2
       exit 2 ;;
    esac
done
shift $(( OPTIND - 1 ));
if [[ $# -ne 0 ]]; then
    echo "$0: FATAL: unexpected argments" 1>&2
    echo $USAGE 1>&2
    exit 3
fi

# firewall
#
export RPMSORT="/usr/lib/rpm/redhat/rpmsort"
if [[ ! -x "$RPMSORT" ]]; then
    echo "$0: FATAL: cannot find rpmsort executable: $RPMSORT" 1>&2
    echo "$0: NOTICE: The redhat-rpm-config package contains $RPMSORT" 1>&2
    echo "$0: NOTICE: try: yum install redhat-rpm-config" 1>&2
    exit 4
fi

# determine the latest installed kernel
#
export LATEST_KERNEL=$(rpm -q kernel 2>/dev/null | "$RPMSORT" 2>/dev/null | tail -1)
if [[ -z "$LATEST_KERNEL" ]]; then
    echo "$0: FATAL: count not determine the latest installed kernel" 1>&2
    exit 5
fi

# determine the running kernel
#
export RUNNING_KERNEL="kernel-"$(uname -r 2>/dev/null)
if [[ -z "$RUNNING_KERNEL" ]]; then
    echo "$0: FATAL: count not determine running kernel" 1>&2
    exit 6
fi

# report if the kernel is up to date
#
if [[ "$LATEST_KERNEL" == "$RUNNING_KERNEL" ]]; then
    # we are running the latest kernel
    if [[ -n "$VERBOSE" ]]; then
        echo "$(hostname -f) $RUNNING_KERNEL is the latest installed kernel"
    fi
    exit 0
fi
echo "$(hostname -f) $RUNNING_KERNEL is not the latest installed kernel $LATEST_KERNEL"
exit 1
